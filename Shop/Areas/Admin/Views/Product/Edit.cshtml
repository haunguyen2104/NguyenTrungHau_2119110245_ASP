@model Shop.Context.Product_2119110245

@{
    ViewBag.Title = "Cập nhật " + Model.Name;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .input___item {
        border: 1px solid #ced4da;
        width: 200px;
        height: calc(2.25rem + 7px);
        padding: 10px 10px;
        border-radius: 5px;
    }

    .img__input {
        padding: 10px 10px;
    }
</style>
<script src="~/Public/ckeditor/ckeditor.js"></script>
@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <!-------------------------------------------------------------------------->
    <!-------------------------------------------------------------------------->
    <!-- Main content -->
    <section class="content my-2">
        <!-- Default box -->
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-6">
                        <span style="font-style:italic">  <span style="color:red">(*)</span> là các trường bắt buộc</span>
                    </div>
                    <div class="col-md-6 text-right">
                        <button class="btn-sm btn-success" type="submit" name="create"> <i class="fas fa-save"></i> Lưu [Thêm]</button>
                        <a href="@Url.Action("Index","Product")" class="btn-sm btn-info"><i class="fas fa-arrow-circle-left"></i> Về danh sách</a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-9">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        <div class="form-group">
                            <label>Tên sản phẩm đầy đủ <span style="color:red;">(*)</span></label>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @style = "color:red;font-style:italic" })

                        </div> 
                        <div class="form-group">
                            <label>Tên sản phẩm đầy đủ <span style="color:red;">(*)</span></label>
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @style = "color:red;font-style:italic" })

                        </div>
                        <div class="form-group row">

                            <div class="col-md-5">
                                <label>Giá<span style="color:red;"> (*)</span></label>
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "10000", @min = "0" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @style = "color:red;font-style:italic" })

                            </div>
                            <div class="col-md-5">
                                <label>Giá Khuyến mãi <span style="color:red">(Nếu có)</span></label>
                                @Html.EditorFor(model => model.PriceDiscount, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "10000", @min = "0" } })
                                @Html.ValidationMessageFor(model => model.PriceDiscount, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-2">
                                <label> Số lượng</label>
                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @max = "100" } })
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="form-group">
                            <label>Chi tiết</label>
                            @Html.TextAreaFor(model => model.ShoetDes, new { @class = "form-control", @rows = "1" })
                            @Html.ValidationMessageFor(model => model.ShoetDes, "", new { @class = "text-danger" })

                        </div>


                        <div class="form-group">
                            <label>Mô tả <span style="color:red;">(*)</span></label>
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control", @id = "FullDescription" } })
                                <script type="text/javascript" lang="javascript">
                                    CKEDITOR.replace("FullDescription")
                                </script>
                                @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">

                        <div class="form-group">
                            <label>Danh mục sản phẩm</label>
                            @Html.DropDownListFor(model => model.CategoryId, ViewBag.ListCategory as SelectList, "---Chọn danh mục sản phẩm--- ", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label>Thương hiệu sản phẩm</label>
                            @Html.DropDownListFor(model => model.BrandId, ViewBag.ListBrand as SelectList, "---Chọn thương hiệu--- ", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label>Loại sản phẩm</label>
                            @Html.DropDownListFor(model => model.TypeId, ViewBag.ProductType as SelectList, "---Loại sản phẩm--- ", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label>Trạng thái xoá</label>
                            @Html.EditorFor(model => model.Deleted, "---Chọn trạng thái--- ", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label>H.Thị trang chủ</label>
                            @Html.DropDownListFor(model => model.ShowOnHomePage, ViewBag.ProductDisplayHome as SelectList, "---Hiển thị trang chủ--- ", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ShowOnHomePage, "", new { @class = "text-danger" })

                        </div>

                        <div class="from-group">
                            <label>Hình</label>
                            <input type="file" name="ImageUpload" class="img__input" />
                            <input type="text" name="Avatar" value="@Model.Avatar" hidden="hidden" />
                            <img width="100%" src="" id="avatarView" />

                        </div>

                    </div>
                </div>
            </div>
        </div>
        <!-- /.card -->
    </section>
    <!-- /.content -->
    <!-------------------------------------------------------------------------->
    <!-------------------------------------------------------------------------->
}

